.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.R
.fi
.in -\\n(EXu
.sp \\n()Pu
..
.TH dfaunion 1 "Grail"
.SH NAME
dfaunion \- compute the union of two deterministic machines
.SH SYNOPSIS
.B dfaunion fm1 fm2
.sp
.B dfaunion fm2 <fm1 
.SH DESCRIPTION
.B
dfaunion
computes the union of \fIfm1\fR and \fIfm2\fR.  This is done
by first checking that if the input two machines are deterministic or not.
If one of the two input machines is not deterministic, then prompt the user
to use the \fIfmunion\fR to do the union. Otherwise, it first gets the union
of the alphabet of the two input machines; Then completes the two machines 
according to the union of the alphabet; In the last, it does the union by using
the cross product method. The input need not be deterministic. But the filter
does the union only when the inputs are deterministic. The output of the filter
is a deterministic finite automatom.

.LP
\fIfm1\fR and \fIfm2\fR must conform to the Grail format 
for machines.
.SH EXAMPLES
.EX
% cat testfm1
(START) |- 2
2 a 0
2 b 1
1 a 0
0 -| (FINAL)

% cat testfm2
(START) |- 1
1 b 2
2 c 0
0 -| (FINAL)

%cat testfm3
(START) |- 0
(START) |- 3
0 a 1
1 b 2
3 a 4
3 b 7
4 c 5
5 d 6
7 e 8
8 f 9
2 -| (FINAL)
6 -| (FINAL)
9 -| (FINAL)

% dfaunion testfm1 testfm2
(START) |- 6
1 a 12
5 a 12
9 a 12
13 a 12
2 a 12
6 a 12
10 a 12
14 a 12
0 a 15
4 a 15
8 a 15
12 a 15
3 a 15
7 a 15
11 a 15
15 a 15
6 b 9
2 b 13
10 b 13
14 b 13
4 b 11
0 b 15
8 b 15
12 b 15
5 b 11
1 b 15
9 b 15
13 b 15
7 b 11
3 b 15
11 b 15
15 b 15
8 c 3
0 c 15
4 c 15
12 c 15
9 c 3
1 c 15
5 c 15
13 c 15
10 c 3
2 c 15
6 c 15
14 c 15
11 c 3
3 c 15
7 c 15
15 c 15
0 -| (FINAL)
4 -| (FINAL)
8 -| (FINAL)
12 -| (FINAL)
1 -| (FINAL)
2 -| (FINAL)
3 -| (FINAL)

%dfaunion testfm1 testfm3
One machine is not deterministic, use fmunion to compute.


.EE
.SH AUTHORS
Sheng Yu and Xiuming Wu, the Grail project
.SH "SEE ALSO"
fm(5), fmrenum(1)









