.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.R
.fi
.in -\\n(EXu
.sp \\n()Pu
..
.TH flexec 1 "Grail"
.SH NAME
flexec \- execute a machine on an input string
.SH SYNOPSIS
.B flexec fl string
.sp
.B flexec string <fl
.SH DESCRIPTION
.B
flexec
tests \fIstring\fR for membership in the finite language
\fIfl\fR.  If \fIstring\fR is a member,
.B
flexec 
returns 1 and writes \fBaccepted\fR on its standard error;
otherwise it returns 0 and writes \fBnot accepted\fR on its
standard error.  
.LP
\fIfl\fR must conform to the Grail format for finite languages.  \fIstring\fR
should probably be protected from the shell by double quotes. 
.SH EXAMPLES
.EX
% cat fl
bc
bcd
aaa

a
fghi

% flexec fl "bc"
accepted

% flexec fl ""
accepted

% flexec fl "bcad"
not accepted
 
.EE
.SH AUTHORS
Roger Robson, Darrell Raymond and Derick Wood, the Grail project
.SH "SEE ALSO"
fl(5), flfilter(1)
