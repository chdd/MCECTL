.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.in -\\n(EXu
.sp \\n()Pu
..
.TH flrq 1 "Grail"
.SH NAME
flrq \- compute the right quotient of a finite language and a string
.SH SYNOPSIS
.B flrq fl string
.sp
.B flrq string <fl
.SH DESCRIPTION
.B
flrq
computes the right quotient of the finite language \fIfl\fR and the
word \fIstring\fR,
writing the resulting finite language on the standard output.  The right 
quotient is defined as the language of all strings \fIX\fR such that \fIX\fR 
catenated with \fIstring\fR is a member of \fIfl\fR.
.LP
\fIfl\fR must conform to the Grail format for finite languages.
.LP
The right quotient of any language \fIL\fR with the empty string yields the
language \fIL\fR.  The right quotient of the empty language and any string
yields the empty language. 
.SH EXAMPLES
.EX
% cat fl
aaabcd
bbbbcd
bcd
bcdaaa
dcbad

% flrq fl cd
aaab
bbbb
b

% flrq fl ""
aaabcd
bbbbcd
bcd
bcdaaa
dcbad

.EE
.SH AUTHORS
Roger Robson, Darrell Raymond and Derick Wood, the Grail project
.SH "SEE ALSO"
fl(5), fllq(1), flprod(1)
