.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.R
.fi
.in -\\n(EXu
.sp \\n()Pu
..
.TH restar 1 "Grail"
.SH NAME
restar \- compute `*' of a regular expression
.SH SYNOPSIS
.B restar re
.sp
.B restar <re
.SH DESCRIPTION
.B
restar 
computes the Kleene star of \fIre\fR, and writes the 
result on standard output.
.LP
\fIre\fR must conform to the Grail format for regular expressions.
.SH EXAMPLES
.EX
% cat re1
{}

% restar <re1
{}

% cat re2
""

% restar re2
""

% cat re3
(a+b)*(abc)

% restar <re3
((a+b)*abc)*

% cat re4
(((a)+(b))*)

% restar re4
(a+b)*

.EE
.SH AUTHORS
Darrell Raymond and Derick Wood, the Grail project
.SH "SEE ALSO"
re(5)
