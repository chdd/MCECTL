.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.R
.fi
.in -\\n(EXu
.sp \\n()Pu
..
.TH fmplus 1 "Grail"
.SH NAME
fmplus \- compute `+' of machine
.SH SYNOPSIS
.B fmplus fm
.sp
.B fmplus <fm
.SH DESCRIPTION
.B
fmplus
computes the `+' of \fIfm\fR; that is, the machine accepting
one or more occurences of words accepted by \fIfm\fR. 
The result is written on standard output.
.LP
.B
fmplus
can be applied to either determinstic or nondeterministic
machines.  The result is guaranteed to be nondeterministic.
.LP
\fIfm\fR must conform to the Grail format for machines.
.LP
.B
fmplus
computes `+' by making all instructions to final states 
also go to start states.  The result has no empty-string
instructions. 
.SH EXAMPLES
.EX
% cat dfm1
(START) |- 0
0 a 1
1 b 2
2 -| (FINAL)

% fmplus dfm1
(START) |- 0
0 a 1 
1 b 2 
1 b 0 
2 -| (FINAL) 

% cat nfm2
(START) |- 1
1 a 2
1 a 3
1 a 4
2 -| (FINAL)
3 -| (FINAL)
4 -| (FINAL)

% fmplus <nfm2
(START) |- 1
1 a 2 
1 a 3 
1 a 4 
1 a 1 
2 -| (FINAL) 
3 -| (FINAL) 
4 -| (FINAL) 

.EE
.SH AUTHORS
Darrell Raymond and Derick Wood, the Grail project
.SH "SEE ALSO"
fm(5)
