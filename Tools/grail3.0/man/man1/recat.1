.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.R
.fi
.in -\\n(EXu
.sp \\n()Pu
..
.TH recat 1 "Grail"
.SH NAME
recat \- catenate two regular expressions
.SH SYNOPSIS
.B recat re1 re2
.sp
.B recat re2 <re1
.SH DESCRIPTION
.B
recat
catenates \fIre1\fR with \fIre2\fR,
and writes the result on standard output.
.LP
\fIre1\fR and \fIre2\fR must conform to the Grail format 
for regular expressions.
.SH EXAMPLES
.EX
% cat re1
{}

% cat re2
""

% cat re3
(a+b)*(abc)

% recat re1 re3
{}

% recat re2 re3
(a+b)*abc

% recat re3 re3
(a+b)*abc(a+b)*abc
.EE
.SH AUTHORS
Darrell Raymond and Derick Wood, the Grail project
.SH "SEE ALSO"
re(5)
