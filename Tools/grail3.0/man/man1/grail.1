.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.R
.fi
.in -\\n(EXu
.sp \\n()Pu
..
.TH "GRAIL" 1 "Grail"
.SH NAME
Grail \- finite-state machines and regular expression software
.SH DESCRIPTION
.LP
\fIGrail\fR is a collection of programs for processing finite-state machines
and regular expressions.  At the user level, \fIGrail\fR consists of a
set of filters that manipulate machines and expressions.  Machines can
be minimized, made deterministic, renumbered, reversed, executed (on
some target string), enumerated, completed, complemented, reduced to
reachable sets, and converted to regular expressions.   Regular
expressions can be converted to finite-state machines and have their
parenthesization minimized.  There are also a set of predicate filters
that test for conditions such as determinism, completeness,
isomorphism, and universality.  The use of these filters is described
in the \fIUser's Guide to Grail\fR and in the associated man pages.
.LP
\fIGrail\fR's finite-state machines and regular expressions are
parameterizable.  It is possible to compile \fIGrail\fR with an
input alphabet defined by any valid C++ type or class. \fIGrail\fR
as shipped includes the alphabets of ASCII characters, ordered pairs of
integers, and regular expressions.
.LP
\fIGrail\fR permits multiple start and final states in its machines.
A machine with more than one start state is nondeterministic by
definition.
.LP
\fIGrail\fR is based on a C++ class library that can be called directly
from a a C++ program.  The use of this class library is described 
in the \fIProgrammer's Guide to Grail\fR. 
.SH AUTHORS
Darrell Raymond and Derick Wood, the Grail project
.SH "SEE ALSO"
fm(5), re(5),
fmcat(1), fmcment(1), fmcomp(1), fmcross(1), fmdeterm(1), fmenum(1), fmexec(1),
fmmin(1), fmminrev(1), fmplus(1), fmreach(1), fmrenum(1), fmrevers(1),
fmstar(1), fmtore(1), fmunion(1), iscomp(1), isdeterm(1), isempty(1),
isnull(1), isomorph(1), isuniv(1), recat(1), remin(1), restar(1),
retofm(1), reunion(1)
