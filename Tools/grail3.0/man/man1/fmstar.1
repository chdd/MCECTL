.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.R
.fi
.in -\\n(EXu
.sp \\n()Pu
..
.TH fmstar 1 "Grail"
.SH NAME
fmstar \- compute `*' of a machine
.SH SYNOPSIS
.B fmstar fm
.sp
.B fmstar <fm
.SH DESCRIPTION
.B
fmstar
computes `*' (also known as Kleene closure) of \fIfm\fR and writes 
the result on standard output.  The input need not be deterministic.
.LP
\fIfm\fR must conform to the Grail format for machines.
.LP
.B
fmstar
introduces no empty-string instructions.  It first computes the `+'
of \fIfm\fR, then it clones the start state and makes it a final 
state.
.SH EXAMPLES
.EX
% cat dfm5
(START) |- 0
0 a 1
1 c 2
2 e 3
3 -| (FINAL)
1 b 0
2 d 0

% fmstar dfm5
(START) |- 4
0 a 1
1 b 0
1 c 2
2 d 0
2 e 3
2 e 0
4 a 1
3 -| (FINAL)
4 -| (FINAL)


.EE
.SH AUTHORS
Darrell Raymond and Derick Wood, the Grail project
.SH "SEE ALSO"
fm(5), fmplus(1)
