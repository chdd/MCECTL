.de EX		
.if \\n(.$>1 .tm troff: tmac.an: \\*(.F: extra arguments ignored
.sp \\n()Pu
.ne 8v
.ie \\n(.$ .nr EX 0\\$1n
.el .nr EX 0.5i
.in +\\n(EXu
.nf
.CW
..
.de EE		
.if \\n(.$>0 .tm troff: tmac.an: \\*(.F: arguments ignored
.R
.fi
.in -\\n(EXu
.sp \\n()Pu
..
.TH fmrenum 1 "Grail"
.SH NAME
fmrenum \- renumber a machine
.SH SYNOPSIS
.B fmrenum fm
.sp
.B fmrenum <fm
.SH DESCRIPTION
.B
fmrenum
renumbers the states in \fIfm\fR according to a canonical numbering;
breadth-first and lexicographically on the instruction labels.
The renumbered machine is placed on standard output.
.LP
If isomorphic machines are canonically renumbered, they are
identical.
.LP
.B
fmrenum 
returns 0 and writes a message on standard error if \fIfm\fR
is nondeterministic.  A machine can be made deterministic
by filtering it with
.B
fmdeterm.
.LP
\fIfm\fR must conform to the Grail format for machines.
.SH EXAMPLES
.EX
% cat dfm2
(START) |- 3
3 a 4
4 b 5
5 -| (FINAL)

% fmrenum dfm2
(START) |- 0
0 a 1 
1 b 2 
2 -| (FINAL) 

.EE
.SH AUTHORS
Darrell Raymond and Derick Wood, the Grail project
.SH "SEE ALSO"
fm(5), fmdeterm(1)
