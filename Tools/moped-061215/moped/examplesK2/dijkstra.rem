//dijkstra with adjacency metrix as a parameter

define N 3
define n 3
define DEFAULT_INT_BITS N

int I[1,n][1,n];
int D[2,n];
bool C[2,n];

init main;

ok: 	goto ok;
error: 	goto error;

module void main() {
	int a, b;
	int l, v, w, min;
	
	a = 1, b = 1;
	do
	:: (a>n)		->	break;
	:: (a<=n && b<n)	->	I[a][b] = (1<<N)-1, b = b+1;
	:: (a<=n && b==n)	->	I[a][b] = (1<<N)-1, a = a+1, b = 1;
	od;
	
	I[1][2] = 1, I[2][3] = 2, I[1][3] = 4;
	//I[1][2] = 1, I[1][3] = 4, I[1][4] = 3, I[2][4] = 1, I[4][3] = 1;

	l = 2;
	do
	:: (l <= n)	-> C[l] = true, D[l] = I[1][l], l = l+1;
	:: else		-> break;
	od;
	
	l = 1;
	do
	:: (l <= n-2)	-> w = 2, min = (1 << N) - 1;								
		do
		:: (w>n)				->	break;
		:: (w<=n && C[w] && min>=D[w])		->	min = D[w], v = w, w = w+1;
		:: (w<=n && (!C[w] || min<D[w]))	->	w = w+1;
		od;
		C[v] = false, w = 2;
		do
		:: (w>n)	 			->	break;
		:: (w<=n && D[w] >  D[v]+I[v][w])	->	D[w] = D[v]+I[v][w], w = w+1;
		:: (w<=n && D[w] <= D[v]+I[v][w])	->	w = w+1;
		od;
		l = l+1;
										
	:: else		->	break;
	od;

	if
	:: (D[3] == 3)	-> goto ok;
	:: else		-> goto error;
	fi;
}
