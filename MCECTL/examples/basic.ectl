
DFA test_dfa {
   STATE ( empty: hungry )
   STATE ( toast_ready: hungry, toast )
   STATE ( fulfilled: )
   ACTION ( make_toast: empty -> toast_ready )
   ACTION ( eat_toast: toast_ready -> fulfilled )
}

REGULAR all {
   .*
}

REGULAR eat_nonexistent_toast {
   .* eat_toast .* make_toast
}

FORMULA not_always_hungry {
   !E( 0 R[all] hungry )
}
#
FORMULA dont_eat_future_toast {
   !E( 1 U[eat_nonexistent_toast] 1 )
}

##
#FORMULA no_wasteful_toast
